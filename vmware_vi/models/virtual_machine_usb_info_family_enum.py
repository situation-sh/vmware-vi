# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class VirtualMachineUsbInfoFamilyEnum(str, Enum):
    """
    Device class family.  Possible values: - `audio`: Audio capable device. - `hid`: Human interface device. - `hid_bootable`: Bootable human interface device, this is a subset of HID devices. - `physical`: Physical interface device. - `communication`: Communication device. - `imaging`: Still imaging device. - `printer`: Printer device. - `storage`: Mass storage device. - `hub`: USB hubs. - `smart_card`: Smart card device. - `security`: Content security device. - `video`: Video device. - `wireless`: Wireless controller. - `bluetooth`: Standard bluetooth adapter that uses HCI protocol,   this is a subset of wireless controllers. - `wusb`: Wireless device related to the Wireless USB standard,   this is a subset of wireless controllers, - `pda`: Palm PDA, and Micorsoft ActiveSync PDA. - `vendor_specific`: Device that has an interface using a vendor-specific protocol. - `other`: Other miscellaneous device. - `unknownFamily`: There was an error in determining this device's classes   accurately.    ***Since:*** VI API 2.5 
    """

    """
    allowed enum values
    """
    AUDIO = 'audio'
    HID = 'hid'
    HID_BOOTABLE = 'hid_bootable'
    PHYSICAL = 'physical'
    COMMUNICATION = 'communication'
    IMAGING = 'imaging'
    PRINTER = 'printer'
    STORAGE = 'storage'
    HUB = 'hub'
    SMART_CARD = 'smart_card'
    SECURITY = 'security'
    VIDEO = 'video'
    WIRELESS = 'wireless'
    BLUETOOTH = 'bluetooth'
    WUSB = 'wusb'
    PDA = 'pda'
    VENDOR_SPECIFIC = 'vendor_specific'
    OTHER = 'other'
    UNKNOWNFAMILY = 'unknownFamily'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of VirtualMachineUsbInfoFamilyEnum from a JSON string"""
        return cls(json.loads(json_str))


