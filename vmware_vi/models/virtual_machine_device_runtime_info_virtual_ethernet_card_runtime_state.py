# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import StrictBool, StrictStr
from pydantic import Field
from vmware_vi.models.virtual_machine_device_runtime_info_device_runtime_state import VirtualMachineDeviceRuntimeInfoDeviceRuntimeState
from vmware_vi.models.virtual_machine_feature_requirement import VirtualMachineFeatureRequirement
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState(VirtualMachineDeviceRuntimeInfoDeviceRuntimeState):
    """
    Runtime state of a virtual ethernet card device.  ***Since:*** vSphere API 4.1 
    """ # noqa: E501
    vm_direct_path_gen2_active: Optional[StrictBool] = Field(default=None, description="Deprecated as of vSphere API 8.0. VMDirectPath Gen 2 is no longer supported and there is no replacement.  Flag to indicate whether VMDirectPath Gen 2 is active on this device.  If false, the reason(s) for inactivity will be provided in one or more of *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonVm*, *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonOther*, and *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonExtended*.  ***Since:*** vSphere API 4.1 ", alias="vmDirectPathGen2Active")
    vm_direct_path_gen2_inactive_reason_vm: Optional[List[StrictStr]] = Field(default=None, description="Deprecated as of vSphere API 8.0. VMDirectPath Gen 2 is no longer supported and there is no replacement.  If *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2Active* is false, this array will be populated with reasons for the inactivity that are related to virtual machine state or configuration (chosen from *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm_enum*).  Other reasons for inactivity will be provided in *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonOther*. If there is a reason for inactivity that cannot be described by the available constants, *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonExtended* will be populated with an additional explanation provided by the platform.  Note that this list of reasons is not guaranteed to be exhaustive.  ***Since:*** vSphere API 4.1 ", alias="vmDirectPathGen2InactiveReasonVm")
    vm_direct_path_gen2_inactive_reason_other: Optional[List[StrictStr]] = Field(default=None, description="Deprecated as of vSphere API 8.0. VMDirectPath Gen 2 is no longer supported and there is no replacement.  If *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2Active* is false, this array will be populated with reasons for the inactivity that are not related to virtual machine state or configuration (chosen from *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther_enum*).  Virtual machine related reasons for inactivity will be provided in *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonVm*. If there is a reason for inactivity that cannot be described by the available constants, *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonExtended* will be populated with an additional explanation provided by the platform.  Note that this list of reasons is not guaranteed to be exhaustive.  See also *HostCapability.vmDirectPathGen2Supported*.  ***Since:*** vSphere API 4.1 ", alias="vmDirectPathGen2InactiveReasonOther")
    vm_direct_path_gen2_inactive_reason_extended: Optional[StrictStr] = Field(default=None, description="Deprecated as of vSphere API 8.0. VMDirectPath Gen 2 is no longer supported and there is no replacement.  If *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2Active* is false, this property may contain an explanation provided by the platform, beyond the reasons (if any) enumerated in *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonVm* and/or *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.vmDirectPathGen2InactiveReasonOther*.  ***Since:*** vSphere API 4.1 ", alias="vmDirectPathGen2InactiveReasonExtended")
    uptv2_active: Optional[StrictBool] = Field(default=None, description="Flag to indicate whether UPTv2(Uniform Pass-through version 2) is active on this device.  If true, the network adapter works in the pass-through mode. If false, the network adapter still has the network connectivity but works in emulated mode and pass-through is not enabled. The reason for inactivity is provided in *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.uptv2InactiveReasonVm* and/or *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.uptv2InactiveReasonOther*. This flag is unset if not applicable. It indicates network adapter is not a vmxnet3 adapter or *VirtualVmxnet3.uptv2Enabled* of it is not set to true. ", alias="uptv2Active")
    uptv2_inactive_reason_vm: Optional[List[StrictStr]] = Field(default=None, description="When *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.uptv2Active* is false, this field will be populated with reasons for the inactivity that are related to virtual machine state or configuration (chosen from *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm_enum*).  Other reasons for inactivity will be provided in *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.uptv2InactiveReasonOther*. This field will be unset if *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.uptv2Active* is true or unset.  Note that this field of reasons is not guaranteed to be exhaustive. ", alias="uptv2InactiveReasonVm")
    uptv2_inactive_reason_other: Optional[List[StrictStr]] = Field(default=None, description="When *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.uptv2Active* is false, this field will be populated with reasons for the inactivity that are not related to virtual machine state or configuration (chosen from *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther_enum*).  Virtual machine related reasons for inactivity will be provided in *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.uptv2InactiveReasonVm*. This field will be unset if *VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.uptv2Active* is true or unset.  Note that this field of reasons is not guaranteed to be exhaustive. ", alias="uptv2InactiveReasonOther")
    reservation_status: Optional[StrictStr] = Field(default=None, description="The status indicating whether network reservation requirement is violated or not on the virtual network adapter.  See *ManagedEntityStatus_enum* for possible values.  *red* indicates that reservation specified on the virtual network adapter is not being fulfilled. This can happen if the reservation requested is greater than the available capacity reserved for virtual machine traffic on the host.  *green* indicates that the reservation specified on the virtual network adapter is being fulfilled.  ***Since:*** vSphere API 5.5 ", alias="reservationStatus")
    attachment_status: Optional[StrictStr] = Field(default=None, description="The status indicating the state of virtual network adapter's attachment to an opaque network.  See *ManagedEntityStatus_enum* for possible values.  *red* indicates that the network adapter is not yet successfully attached to opaque network. This can happen if corresponding attachment port is missing in the kernel.  *green* indicates that the network adapater is successfully attached to opaque network.  ***Since:*** vSphere API 6.7 ", alias="attachmentStatus")
    feature_requirement: Optional[List[VirtualMachineFeatureRequirement]] = Field(default=None, description="These network adapter requirements must have equivalent capabilities on the virtual switch in order to power on or migrate to the host.  ***Since:*** vSphere API 6.7 ", alias="featureRequirement")
    __properties: ClassVar[List[str]] = ["_typeName"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "_typeName": obj.get("_typeName")
        })
        return _obj


