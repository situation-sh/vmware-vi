# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class HostCapabilityFtUnsupportedReasonEnum(str, Enum):
    """
    Deprecated as of vSphere API 7.0, use *VmFaultToleranceConfigIssueReasonForIssue_enum*.  Set of possible values for *HostCapability.ftCompatibilityIssues*  Possible values: - `vMotionNotLicensed`: No VMotion license - `missingVMotionNic`: VMotion nic is not configured on the host - `missingFTLoggingNic`: FT logging nic is not configured on the host - `ftNotLicensed`: Host does not have proper FT license - `haAgentIssue`: Host does not have HA agent running properly - `unsupportedProduct`: VMware product installed on the host does not support   fault tolerance      ***Since:*** vSphere API 6.0 - `cpuHvUnsupported`: Host CPU does not support hardware virtualization      ***Since:*** vSphere API 6.0 - `cpuHwmmuUnsupported`: Host CPU does not support hardware MMU virtualization      ***Since:*** vSphere API 6.0 - `cpuHvDisabled`: Host CPU is compatible for replay-based FT, but hardware   virtualization has been disabled in the BIOS.      ***Since:*** vSphere API 6.0  ***Since:*** vSphere API 4.1 
    """

    """
    allowed enum values
    """
    VMOTIONNOTLICENSED = 'vMotionNotLicensed'
    MISSINGVMOTIONNIC = 'missingVMotionNic'
    MISSINGFTLOGGINGNIC = 'missingFTLoggingNic'
    FTNOTLICENSED = 'ftNotLicensed'
    HAAGENTISSUE = 'haAgentIssue'
    UNSUPPORTEDPRODUCT = 'unsupportedProduct'
    CPUHVUNSUPPORTED = 'cpuHvUnsupported'
    CPUHWMMUUNSUPPORTED = 'cpuHwmmuUnsupported'
    CPUHVDISABLED = 'cpuHvDisabled'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of HostCapabilityFtUnsupportedReasonEnum from a JSON string"""
        return cls(json.loads(json_str))


