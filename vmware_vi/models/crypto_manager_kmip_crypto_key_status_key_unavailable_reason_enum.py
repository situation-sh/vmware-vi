# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class CryptoManagerKmipCryptoKeyStatusKeyUnavailableReasonEnum(str, Enum):
    """
    Possible values: - `KeyStateMissingInCache`: Key not found in VC cache and does not specify a provider - `KeyStateClusterInvalid`: Key provider is invalid - `KeyStateClusterUnreachable`: Can not reach the key provider - `KeyStateMissingInKMS`: Key not found in KMS - `KeyStateNotActiveOrEnabled`: Key not active or enabled - `KeyStateManagedByTrustAuthority`: Key is managed by Trust Authority      ***Since:*** vSphere API 7.0 - `KeyStateManagedByNKP`: Key is managed by Native Key Provider      ***Since:*** vim VMcrypt_KeystateManagedByNKP version  ***Since:*** vSphere API 6.7.2 
    """

    """
    allowed enum values
    """
    KEYSTATEMISSINGINCACHE = 'KeyStateMissingInCache'
    KEYSTATECLUSTERINVALID = 'KeyStateClusterInvalid'
    KEYSTATECLUSTERUNREACHABLE = 'KeyStateClusterUnreachable'
    KEYSTATEMISSINGINKMS = 'KeyStateMissingInKMS'
    KEYSTATENOTACTIVEORENABLED = 'KeyStateNotActiveOrEnabled'
    KEYSTATEMANAGEDBYTRUSTAUTHORITY = 'KeyStateManagedByTrustAuthority'
    KEYSTATEMANAGEDBYNKP = 'KeyStateManagedByNKP'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of CryptoManagerKmipCryptoKeyStatusKeyUnavailableReasonEnum from a JSON string"""
        return cls(json.loads(json_str))


