# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class HostNumericSensorTypeEnum(str, Enum):
    """
    Sensor Types for specific hardware component are either based on class of sensor or what the sensor monitors to allow for grouping  Possible values: - `fan`: Fan sensor - `power`: Power sensor - `temperature`: Temperature sensor - `voltage`: Voltage Sensor - `other`: Other sensor. - `processor`: Processor sensor.      ***Since:*** vSphere API 6.5 - `memory`: Memory sensor.      ***Since:*** vSphere API 6.5 - `storage`: disk/storage sensor.      ***Since:*** vSphere API 6.5 - `systemBoard`: system board sensor.      ***Since:*** vSphere API 6.5 - `battery`: Battery sensor.      ***Since:*** vSphere API 6.5 - `bios`: BIOS/firmware related sensor.      ***Since:*** vSphere API 6.5 - `cable`: cable related sensor.      ***Since:*** vSphere API 6.5 - `watchdog`: Watchdog related sensor.      ***Since:*** vSphere API 6.5  ***Since:*** VI API 2.5 
    """

    """
    allowed enum values
    """
    FAN = 'fan'
    POWER = 'power'
    TEMPERATURE = 'temperature'
    VOLTAGE = 'voltage'
    OTHER = 'other'
    PROCESSOR = 'processor'
    MEMORY = 'memory'
    STORAGE = 'storage'
    SYSTEMBOARD = 'systemBoard'
    BATTERY = 'battery'
    BIOS = 'bios'
    CABLE = 'cable'
    WATCHDOG = 'watchdog'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of HostNumericSensorTypeEnum from a JSON string"""
        return cls(json.loads(json_str))


