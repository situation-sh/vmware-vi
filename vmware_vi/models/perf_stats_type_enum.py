# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class PerfStatsTypeEnum(str, Enum):
    """
    Indicates the type of statistical measurement that a counter&#146;s value represents.  Valid types are &#147;absolute&#148;, &#147;delta&#148;, or &#147;rate&#148;.  Possible values: - `absolute`: Represents an actual value, level, or state of the counter.      For   example, the &#147;uptime&#148; counter (**system** group)   represents the actual number of seconds since startup. The   &#147;capacity&#148; counter represents the actual configured size   of the specified datastore. In other words, number of samples,   samplingPeriod, and intervals have no bearing on an   &#147;absolute&#148; counter&#147;s value. - `delta`: Represents an amount of change for the counter during the *PerfInterval.samplingPeriod* as compared to the previous   *interval*.      The first sampling interval - `rate`: Represents a value that has been normalized over the *PerfInterval.samplingPeriod*, enabling values for the same   counter type to be compared, regardless of interval.      For example,   the number of reads per second. 
    """

    """
    allowed enum values
    """
    ABSOLUTE = 'absolute'
    DELTA = 'delta'
    RATE = 'rate'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of PerfStatsTypeEnum from a JSON string"""
        return cls(json.loads(json_str))


