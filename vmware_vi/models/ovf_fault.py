# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Union

from vmware_vi.models.vim_fault import VimFault
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class OvfFault(VimFault):
    """
    A common base type fault for all Ovf related faults.  The structure of OvfFault is as listed. - OvfFault   - OvfInvalidPackage     - OvfXmlFormat     - OvfWrongNamespace     - OvfElement       - OvfElementInvalidValue       - OvfUnexpectedElement       - OvfDuplicateElement       - OvfMissingElement       - OvfMissingElementNormalBoundary       - OvfDuplicatedElementBoundary     - OvfAttribute       - OvfMissingAttribute       - OvfInvalidValue         - OvfInvalidValueFormatMalformed         - OvfInvalidValueConfiguration         - OvfInvalidValueReference         - OvfInvalidValueEmpty     - OvfProperty       - OvfPropertyType       - OvfPropertyValue       - OvfPropertyNetwork       - OvfPropertyQualifier       - OvfPropertyQualifierWarning   - OvfConstraint     - OvfDiskOrderConstraint     - OvfHostResourceConstraint   - OvfUnsupportedPackage     - OvfNoHostNic     - OvfInvalidVmName     - OvfUnsupportedAttribute       - OvfUnsupportedAttributeValue     - OvfUnsupportedElement       - OvfUnsupportedElementValue       - OvfUnsupportedSection       - OvfNoSpaceOnController     - OvfUnsupportedType     - OvfUnsupportedSubType     - OvfHardwareCheck     - OvfNoSupportedHardwareFamily   - OvfExport     - OvfExportFailed     - OvfHardwareExport       - OvfUnsupportedDeviceExport       - OvfUnknownDeviceBacking       - OvfConnectedDevice         - OvfConnectedDeviceISO       - OvfUnableToExportDisk     - OvfPropertyExport     - OvfPropertyNetworkExport     - OvfDuplicatedPropertyIdExport   - OvfImport (these are typically returned as warnings)     - OvfImportFailed     - OvfHardwareCheck     - OvfMissingHardware     - OvfCpuCompatibility     - OvfCpuCompatibilityCheckNotSupported     - OvfUnsupportedDiskProvisioning     - OvfDuplicatedPropertyIdImport     - OvfNetworkMappingNotSupported   - OvfSystemFault     - OvfDiskMappingNotFound     - OvfHostValueNotParsed     - OvfInternalError     - OvfUnsupportedDeviceBackingOption     - OvfUnsupportedDeviceBackingInfo     - OvfToXmlUnsupportedElement     - OvfUnknownDevice     - OvfUnknownEntity   - OvfConsumerCallbackFault     - OvfConsumerFault     - OvfConsumerCommunicationError     - OvfConsumerInvalidSection     - OvfConsumerUndeclaredSection     - OvfConsumerUndefinedPrefix        All messages go into the vimlocale  ***Since:*** vSphere API 4.0 
    """ # noqa: E501
    __properties: ClassVar[List[str]] = ["_typeName"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True
    }


    # JSON field name that stores the object type
    __discriminator_property_name: ClassVar[List[str]] = '_typeName'

    # discriminator mappings
    __discriminator_value_class_map: ClassVar[Dict[str, str]] = {
        'ArrayOfAnyURI': 'ArrayOfURI','ArrayOfBase64Binary': 'ArrayOfBinary','ArrayOfPropertyPath': 'ArrayOfPropPath','MethodName': 'PrimitiveMethodName','PropertyPath': 'PrimitivePropPath','TypeName': 'PrimitiveTypeName','anyURI': 'PrimitiveURI','base64Binary': 'PrimitiveBinary','boolean': 'PrimitiveBoolean','byte': 'PrimitiveByte','dateTime': 'PrimitiveDateTime','double': 'PrimitiveDouble','float': 'PrimitiveFloat','int': 'PrimitiveInt','long': 'PrimitiveLong','short': 'PrimitiveShort','string': 'PrimitiveString','ConnectedIso': 'ConnectedIso','OvfAttribute': 'OvfAttribute','OvfConnectedDevice': 'OvfConnectedDevice','OvfConnectedDeviceFloppy': 'OvfConnectedDeviceFloppy','OvfConnectedDeviceIso': 'OvfConnectedDeviceIso','OvfConstraint': 'OvfConstraint','OvfConsumerCallbackFault': 'OvfConsumerCallbackFault','OvfConsumerCommunicationError': 'OvfConsumerCommunicationError','OvfConsumerFault': 'OvfConsumerFault','OvfConsumerInvalidSection': 'OvfConsumerInvalidSection','OvfConsumerUndeclaredSection': 'OvfConsumerUndeclaredSection','OvfConsumerUndefinedPrefix': 'OvfConsumerUndefinedPrefix','OvfCpuCompatibility': 'OvfCpuCompatibility','OvfCpuCompatibilityCheckNotSupported': 'OvfCpuCompatibilityCheckNotSupported','OvfDiskMappingNotFound': 'OvfDiskMappingNotFound','OvfDiskOrderConstraint': 'OvfDiskOrderConstraint','OvfDuplicateElement': 'OvfDuplicateElement','OvfDuplicatedElementBoundary': 'OvfDuplicatedElementBoundary','OvfDuplicatedPropertyIdExport': 'OvfDuplicatedPropertyIdExport','OvfDuplicatedPropertyIdImport': 'OvfDuplicatedPropertyIdImport','OvfElement': 'OvfElement','OvfElementInvalidValue': 'OvfElementInvalidValue','OvfExport': 'OvfExport','OvfExportFailed': 'OvfExportFailed','OvfHardwareCheck': 'OvfHardwareCheck','OvfHardwareExport': 'OvfHardwareExport','OvfHostResourceConstraint': 'OvfHostResourceConstraint','OvfHostValueNotParsed': 'OvfHostValueNotParsed','OvfImport': 'OvfImport','OvfImportFailed': 'OvfImportFailed','OvfInternalError': 'OvfInternalError','OvfInvalidPackage': 'OvfInvalidPackage','OvfInvalidValue': 'OvfInvalidValue','OvfInvalidValueConfiguration': 'OvfInvalidValueConfiguration','OvfInvalidValueEmpty': 'OvfInvalidValueEmpty','OvfInvalidValueFormatMalformed': 'OvfInvalidValueFormatMalformed','OvfInvalidValueReference': 'OvfInvalidValueReference','OvfInvalidVmName': 'OvfInvalidVmName','OvfMappedOsId': 'OvfMappedOsId','OvfMissingAttribute': 'OvfMissingAttribute','OvfMissingElement': 'OvfMissingElement','OvfMissingElementNormalBoundary': 'OvfMissingElementNormalBoundary','OvfMissingHardware': 'OvfMissingHardware','OvfNetworkMappingNotSupported': 'OvfNetworkMappingNotSupported','OvfNoHostNic': 'OvfNoHostNic','OvfNoSpaceOnController': 'OvfNoSpaceOnController','OvfNoSupportedHardwareFamily': 'OvfNoSupportedHardwareFamily','OvfProperty': 'OvfProperty','OvfPropertyExport': 'OvfPropertyExport','OvfPropertyNetwork': 'OvfPropertyNetwork','OvfPropertyNetworkExport': 'OvfPropertyNetworkExport','OvfPropertyQualifier': 'OvfPropertyQualifier','OvfPropertyQualifierDuplicate': 'OvfPropertyQualifierDuplicate','OvfPropertyQualifierIgnored': 'OvfPropertyQualifierIgnored','OvfPropertyType': 'OvfPropertyType','OvfPropertyValue': 'OvfPropertyValue','OvfSystemFault': 'OvfSystemFault','OvfToXmlUnsupportedElement': 'OvfToXmlUnsupportedElement','OvfUnableToExportDisk': 'OvfUnableToExportDisk','OvfUnexpectedElement': 'OvfUnexpectedElement','OvfUnknownDevice': 'OvfUnknownDevice','OvfUnknownDeviceBacking': 'OvfUnknownDeviceBacking','OvfUnknownEntity': 'OvfUnknownEntity','OvfUnsupportedAttribute': 'OvfUnsupportedAttribute','OvfUnsupportedAttributeValue': 'OvfUnsupportedAttributeValue','OvfUnsupportedDeviceBackingInfo': 'OvfUnsupportedDeviceBackingInfo','OvfUnsupportedDeviceBackingOption': 'OvfUnsupportedDeviceBackingOption','OvfUnsupportedDeviceExport': 'OvfUnsupportedDeviceExport','OvfUnsupportedDiskProvisioning': 'OvfUnsupportedDiskProvisioning','OvfUnsupportedElement': 'OvfUnsupportedElement','OvfUnsupportedElementValue': 'OvfUnsupportedElementValue','OvfUnsupportedPackage': 'OvfUnsupportedPackage','OvfUnsupportedSection': 'OvfUnsupportedSection','OvfUnsupportedSubType': 'OvfUnsupportedSubType','OvfUnsupportedType': 'OvfUnsupportedType','OvfWrongElement': 'OvfWrongElement','OvfWrongNamespace': 'OvfWrongNamespace','OvfXmlFormat': 'OvfXmlFormat'
    }

    @classmethod
    def get_discriminator_value(cls, obj: Dict) -> str:
        """Returns the discriminator value (object type) of the data"""
        discriminator_value = obj[cls.__discriminator_property_name]
        if discriminator_value:
            return cls.__discriminator_value_class_map.get(discriminator_value)
        else:
            return None

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Union[Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self]:
        """Create an instance of OvfFault from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Union[Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self]:
        """Create an instance of OvfFault from a dict"""
        # look up the object type based on discriminator mapping
        object_type = cls.get_discriminator_value(obj)
        if object_type:
            klass = globals()[object_type]
            return klass.from_dict(obj)
        else:
            raise ValueError("OvfFault failed to lookup discriminator value from " +
                             json.dumps(obj) + ". Discriminator property name: " + cls.__discriminator_property_name +
                             ", mapping: " + json.dumps(cls.__discriminator_value_class_map))

from vmware_vi.models.array_of_binary import ArrayOfBinary
from vmware_vi.models.array_of_prop_path import ArrayOfPropPath
from vmware_vi.models.array_of_uri import ArrayOfURI
from vmware_vi.models.connected_iso import ConnectedIso
from vmware_vi.models.ovf_attribute import OvfAttribute
from vmware_vi.models.ovf_connected_device import OvfConnectedDevice
from vmware_vi.models.ovf_connected_device_floppy import OvfConnectedDeviceFloppy
from vmware_vi.models.ovf_connected_device_iso import OvfConnectedDeviceIso
from vmware_vi.models.ovf_constraint import OvfConstraint
from vmware_vi.models.ovf_consumer_callback_fault import OvfConsumerCallbackFault
from vmware_vi.models.ovf_consumer_communication_error import OvfConsumerCommunicationError
from vmware_vi.models.ovf_consumer_fault import OvfConsumerFault
from vmware_vi.models.ovf_consumer_invalid_section import OvfConsumerInvalidSection
from vmware_vi.models.ovf_consumer_undeclared_section import OvfConsumerUndeclaredSection
from vmware_vi.models.ovf_consumer_undefined_prefix import OvfConsumerUndefinedPrefix
from vmware_vi.models.ovf_cpu_compatibility import OvfCpuCompatibility
from vmware_vi.models.ovf_cpu_compatibility_check_not_supported import OvfCpuCompatibilityCheckNotSupported
from vmware_vi.models.ovf_disk_mapping_not_found import OvfDiskMappingNotFound
from vmware_vi.models.ovf_disk_order_constraint import OvfDiskOrderConstraint
from vmware_vi.models.ovf_duplicate_element import OvfDuplicateElement
from vmware_vi.models.ovf_duplicated_element_boundary import OvfDuplicatedElementBoundary
from vmware_vi.models.ovf_duplicated_property_id_export import OvfDuplicatedPropertyIdExport
from vmware_vi.models.ovf_duplicated_property_id_import import OvfDuplicatedPropertyIdImport
from vmware_vi.models.ovf_element import OvfElement
from vmware_vi.models.ovf_element_invalid_value import OvfElementInvalidValue
from vmware_vi.models.ovf_export import OvfExport
from vmware_vi.models.ovf_export_failed import OvfExportFailed
from vmware_vi.models.ovf_hardware_check import OvfHardwareCheck
from vmware_vi.models.ovf_hardware_export import OvfHardwareExport
from vmware_vi.models.ovf_host_resource_constraint import OvfHostResourceConstraint
from vmware_vi.models.ovf_host_value_not_parsed import OvfHostValueNotParsed
from vmware_vi.models.ovf_import import OvfImport
from vmware_vi.models.ovf_import_failed import OvfImportFailed
from vmware_vi.models.ovf_internal_error import OvfInternalError
from vmware_vi.models.ovf_invalid_package import OvfInvalidPackage
from vmware_vi.models.ovf_invalid_value import OvfInvalidValue
from vmware_vi.models.ovf_invalid_value_configuration import OvfInvalidValueConfiguration
from vmware_vi.models.ovf_invalid_value_empty import OvfInvalidValueEmpty
from vmware_vi.models.ovf_invalid_value_format_malformed import OvfInvalidValueFormatMalformed
from vmware_vi.models.ovf_invalid_value_reference import OvfInvalidValueReference
from vmware_vi.models.ovf_invalid_vm_name import OvfInvalidVmName
from vmware_vi.models.ovf_mapped_os_id import OvfMappedOsId
from vmware_vi.models.ovf_missing_attribute import OvfMissingAttribute
from vmware_vi.models.ovf_missing_element import OvfMissingElement
from vmware_vi.models.ovf_missing_element_normal_boundary import OvfMissingElementNormalBoundary
from vmware_vi.models.ovf_missing_hardware import OvfMissingHardware
from vmware_vi.models.ovf_network_mapping_not_supported import OvfNetworkMappingNotSupported
from vmware_vi.models.ovf_no_host_nic import OvfNoHostNic
from vmware_vi.models.ovf_no_space_on_controller import OvfNoSpaceOnController
from vmware_vi.models.ovf_no_supported_hardware_family import OvfNoSupportedHardwareFamily
from vmware_vi.models.ovf_property import OvfProperty
from vmware_vi.models.ovf_property_export import OvfPropertyExport
from vmware_vi.models.ovf_property_network import OvfPropertyNetwork
from vmware_vi.models.ovf_property_network_export import OvfPropertyNetworkExport
from vmware_vi.models.ovf_property_qualifier import OvfPropertyQualifier
from vmware_vi.models.ovf_property_qualifier_duplicate import OvfPropertyQualifierDuplicate
from vmware_vi.models.ovf_property_qualifier_ignored import OvfPropertyQualifierIgnored
from vmware_vi.models.ovf_property_type import OvfPropertyType
from vmware_vi.models.ovf_property_value import OvfPropertyValue
from vmware_vi.models.ovf_system_fault import OvfSystemFault
from vmware_vi.models.ovf_to_xml_unsupported_element import OvfToXmlUnsupportedElement
from vmware_vi.models.ovf_unable_to_export_disk import OvfUnableToExportDisk
from vmware_vi.models.ovf_unexpected_element import OvfUnexpectedElement
from vmware_vi.models.ovf_unknown_device import OvfUnknownDevice
from vmware_vi.models.ovf_unknown_device_backing import OvfUnknownDeviceBacking
from vmware_vi.models.ovf_unknown_entity import OvfUnknownEntity
from vmware_vi.models.ovf_unsupported_attribute import OvfUnsupportedAttribute
from vmware_vi.models.ovf_unsupported_attribute_value import OvfUnsupportedAttributeValue
from vmware_vi.models.ovf_unsupported_device_backing_info import OvfUnsupportedDeviceBackingInfo
from vmware_vi.models.ovf_unsupported_device_backing_option import OvfUnsupportedDeviceBackingOption
from vmware_vi.models.ovf_unsupported_device_export import OvfUnsupportedDeviceExport
from vmware_vi.models.ovf_unsupported_disk_provisioning import OvfUnsupportedDiskProvisioning
from vmware_vi.models.ovf_unsupported_element import OvfUnsupportedElement
from vmware_vi.models.ovf_unsupported_element_value import OvfUnsupportedElementValue
from vmware_vi.models.ovf_unsupported_package import OvfUnsupportedPackage
from vmware_vi.models.ovf_unsupported_section import OvfUnsupportedSection
from vmware_vi.models.ovf_unsupported_sub_type import OvfUnsupportedSubType
from vmware_vi.models.ovf_unsupported_type import OvfUnsupportedType
from vmware_vi.models.ovf_wrong_element import OvfWrongElement
from vmware_vi.models.ovf_wrong_namespace import OvfWrongNamespace
from vmware_vi.models.ovf_xml_format import OvfXmlFormat
from vmware_vi.models.primitive_binary import PrimitiveBinary
from vmware_vi.models.primitive_boolean import PrimitiveBoolean
from vmware_vi.models.primitive_byte import PrimitiveByte
from vmware_vi.models.primitive_date_time import PrimitiveDateTime
from vmware_vi.models.primitive_double import PrimitiveDouble
from vmware_vi.models.primitive_float import PrimitiveFloat
from vmware_vi.models.primitive_int import PrimitiveInt
from vmware_vi.models.primitive_long import PrimitiveLong
from vmware_vi.models.primitive_method_name import PrimitiveMethodName
from vmware_vi.models.primitive_prop_path import PrimitivePropPath
from vmware_vi.models.primitive_short import PrimitiveShort
from vmware_vi.models.primitive_string import PrimitiveString
from vmware_vi.models.primitive_type_name import PrimitiveTypeName
from vmware_vi.models.primitive_uri import PrimitiveURI
# TODO: Rewrite to not use raise_errors
OvfFault.model_rebuild(raise_errors=False)

