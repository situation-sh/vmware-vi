# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Union

from vmware_vi.models.method_fault import MethodFault
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class RuntimeFault(MethodFault):
    """
    The base data object type for all runtime faults that can be thrown by a method. 
    """ # noqa: E501
    __properties: ClassVar[List[str]] = ["_typeName"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True
    }


    # JSON field name that stores the object type
    __discriminator_property_name: ClassVar[List[str]] = '_typeName'

    # discriminator mappings
    __discriminator_value_class_map: ClassVar[Dict[str, str]] = {
        'ArrayOfAnyURI': 'ArrayOfURI','ArrayOfBase64Binary': 'ArrayOfBinary','ArrayOfPropertyPath': 'ArrayOfPropPath','MethodName': 'PrimitiveMethodName','PropertyPath': 'PrimitivePropPath','TypeName': 'PrimitiveTypeName','anyURI': 'PrimitiveURI','base64Binary': 'PrimitiveBinary','boolean': 'PrimitiveBoolean','byte': 'PrimitiveByte','dateTime': 'PrimitiveDateTime','double': 'PrimitiveDouble','float': 'PrimitiveFloat','int': 'PrimitiveInt','long': 'PrimitiveLong','short': 'PrimitiveShort','string': 'PrimitiveString','CannotDisableDrsOnClustersWithVApps': 'CannotDisableDrsOnClustersWithVApps','ConflictingDatastoreFound': 'ConflictingDatastoreFound','DatabaseError': 'DatabaseError','DisallowedChangeByService': 'DisallowedChangeByService','DisallowedOperationOnFailoverHost': 'DisallowedOperationOnFailoverHost','ExpiredAddonLicense': 'ExpiredAddonLicense','ExpiredEditionLicense': 'ExpiredEditionLicense','ExpiredFeatureLicense': 'ExpiredFeatureLicense','FailToEnableSPBM': 'FailToEnableSPBM','FailToLockFaultToleranceVMs': 'FailToLockFaultToleranceVMs','HostAccessRestrictedToManagementServer': 'HostAccessRestrictedToManagementServer','HostCommunication': 'HostCommunication','HostInventoryFull': 'HostInventoryFull','HostNotConnected': 'HostNotConnected','HostNotReachable': 'HostNotReachable','InUseFeatureManipulationDisallowed': 'InUseFeatureManipulationDisallowed','IncompatibleSetting': 'IncompatibleSetting','IncorrectHostInformation': 'IncorrectHostInformation','InvalidArgument': 'InvalidArgument','InvalidDasConfigArgument': 'InvalidDasConfigArgument','InvalidDasRestartPriorityForFtVm': 'InvalidDasRestartPriorityForFtVm','InvalidDrsBehaviorForFtVm': 'InvalidDrsBehaviorForFtVm','InvalidEditionLicense': 'InvalidEditionLicense','InvalidIndexArgument': 'InvalidIndexArgument','InvalidProfileReferenceHost': 'InvalidProfileReferenceHost','InvalidRequest': 'InvalidRequest','InvalidType': 'InvalidType','InventoryHasStandardAloneHosts': 'InventoryHasStandardAloneHosts','LicenseAssignmentFailed': 'LicenseAssignmentFailed','LicenseDowngradeDisallowed': 'LicenseDowngradeDisallowed','LicenseExpired': 'LicenseExpired','LicenseKeyEntityMismatch': 'LicenseKeyEntityMismatch','LicenseRestricted': 'LicenseRestricted','LicenseSourceUnavailable': 'LicenseSourceUnavailable','ManagedObjectNotFound': 'ManagedObjectNotFound','MethodAlreadyDisabledFault': 'MethodAlreadyDisabledFault','MethodDisabled': 'MethodDisabled','MethodNotFound': 'MethodNotFound','NoLicenseServerConfigured': 'NoLicenseServerConfigured','NoPermission': 'NoPermission','NotAuthenticated': 'NotAuthenticated','NotEnoughLicenses': 'NotEnoughLicenses','NotImplemented': 'NotImplemented','NotSupported': 'NotSupported','OperationDisallowedOnHost': 'OperationDisallowedOnHost','RequestCanceled': 'RequestCanceled','RestrictedByAdministrator': 'RestrictedByAdministrator','RestrictedVersion': 'RestrictedVersion','SecurityError': 'SecurityError','SolutionUserRequired': 'SolutionUserRequired','SystemError': 'SystemError','ThirdPartyLicenseAssignmentFailed': 'ThirdPartyLicenseAssignmentFailed','UnexpectedFault': 'UnexpectedFault','VAppOperationInProgress': 'VAppOperationInProgress','VmLimitLicense': 'VmLimitLicense','VramLimitLicense': 'VramLimitLicense'
    }

    @classmethod
    def get_discriminator_value(cls, obj: Dict) -> str:
        """Returns the discriminator value (object type) of the data"""
        discriminator_value = obj[cls.__discriminator_property_name]
        if discriminator_value:
            return cls.__discriminator_value_class_map.get(discriminator_value)
        else:
            return None

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Union[Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self]:
        """Create an instance of RuntimeFault from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Union[Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self, Self]:
        """Create an instance of RuntimeFault from a dict"""
        # look up the object type based on discriminator mapping
        object_type = cls.get_discriminator_value(obj)
        if object_type:
            klass = globals()[object_type]
            return klass.from_dict(obj)
        else:
            raise ValueError("RuntimeFault failed to lookup discriminator value from " +
                             json.dumps(obj) + ". Discriminator property name: " + cls.__discriminator_property_name +
                             ", mapping: " + json.dumps(cls.__discriminator_value_class_map))

from vmware_vi.models.array_of_binary import ArrayOfBinary
from vmware_vi.models.array_of_prop_path import ArrayOfPropPath
from vmware_vi.models.array_of_uri import ArrayOfURI
from vmware_vi.models.cannot_disable_drs_on_clusters_with_v_apps import CannotDisableDrsOnClustersWithVApps
from vmware_vi.models.conflicting_datastore_found import ConflictingDatastoreFound
from vmware_vi.models.database_error import DatabaseError
from vmware_vi.models.disallowed_change_by_service import DisallowedChangeByService
from vmware_vi.models.disallowed_operation_on_failover_host import DisallowedOperationOnFailoverHost
from vmware_vi.models.expired_addon_license import ExpiredAddonLicense
from vmware_vi.models.expired_edition_license import ExpiredEditionLicense
from vmware_vi.models.expired_feature_license import ExpiredFeatureLicense
from vmware_vi.models.fail_to_enable_spbm import FailToEnableSPBM
from vmware_vi.models.fail_to_lock_fault_tolerance_vms import FailToLockFaultToleranceVMs
from vmware_vi.models.host_access_restricted_to_management_server import HostAccessRestrictedToManagementServer
from vmware_vi.models.host_communication import HostCommunication
from vmware_vi.models.host_inventory_full import HostInventoryFull
from vmware_vi.models.host_not_connected import HostNotConnected
from vmware_vi.models.host_not_reachable import HostNotReachable
from vmware_vi.models.in_use_feature_manipulation_disallowed import InUseFeatureManipulationDisallowed
from vmware_vi.models.incompatible_setting import IncompatibleSetting
from vmware_vi.models.incorrect_host_information import IncorrectHostInformation
from vmware_vi.models.invalid_argument import InvalidArgument
from vmware_vi.models.invalid_das_config_argument import InvalidDasConfigArgument
from vmware_vi.models.invalid_das_restart_priority_for_ft_vm import InvalidDasRestartPriorityForFtVm
from vmware_vi.models.invalid_drs_behavior_for_ft_vm import InvalidDrsBehaviorForFtVm
from vmware_vi.models.invalid_edition_license import InvalidEditionLicense
from vmware_vi.models.invalid_index_argument import InvalidIndexArgument
from vmware_vi.models.invalid_profile_reference_host import InvalidProfileReferenceHost
from vmware_vi.models.invalid_request import InvalidRequest
from vmware_vi.models.invalid_type import InvalidType
from vmware_vi.models.inventory_has_standard_alone_hosts import InventoryHasStandardAloneHosts
from vmware_vi.models.license_assignment_failed import LicenseAssignmentFailed
from vmware_vi.models.license_downgrade_disallowed import LicenseDowngradeDisallowed
from vmware_vi.models.license_expired import LicenseExpired
from vmware_vi.models.license_key_entity_mismatch import LicenseKeyEntityMismatch
from vmware_vi.models.license_restricted import LicenseRestricted
from vmware_vi.models.license_source_unavailable import LicenseSourceUnavailable
from vmware_vi.models.managed_object_not_found import ManagedObjectNotFound
from vmware_vi.models.method_already_disabled_fault import MethodAlreadyDisabledFault
from vmware_vi.models.method_disabled import MethodDisabled
from vmware_vi.models.method_not_found import MethodNotFound
from vmware_vi.models.no_license_server_configured import NoLicenseServerConfigured
from vmware_vi.models.no_permission import NoPermission
from vmware_vi.models.not_authenticated import NotAuthenticated
from vmware_vi.models.not_enough_licenses import NotEnoughLicenses
from vmware_vi.models.not_implemented import NotImplemented
from vmware_vi.models.not_supported import NotSupported
from vmware_vi.models.operation_disallowed_on_host import OperationDisallowedOnHost
from vmware_vi.models.primitive_binary import PrimitiveBinary
from vmware_vi.models.primitive_boolean import PrimitiveBoolean
from vmware_vi.models.primitive_byte import PrimitiveByte
from vmware_vi.models.primitive_date_time import PrimitiveDateTime
from vmware_vi.models.primitive_double import PrimitiveDouble
from vmware_vi.models.primitive_float import PrimitiveFloat
from vmware_vi.models.primitive_int import PrimitiveInt
from vmware_vi.models.primitive_long import PrimitiveLong
from vmware_vi.models.primitive_method_name import PrimitiveMethodName
from vmware_vi.models.primitive_prop_path import PrimitivePropPath
from vmware_vi.models.primitive_short import PrimitiveShort
from vmware_vi.models.primitive_string import PrimitiveString
from vmware_vi.models.primitive_type_name import PrimitiveTypeName
from vmware_vi.models.primitive_uri import PrimitiveURI
from vmware_vi.models.request_canceled import RequestCanceled
from vmware_vi.models.restricted_by_administrator import RestrictedByAdministrator
from vmware_vi.models.restricted_version import RestrictedVersion
from vmware_vi.models.security_error import SecurityError
from vmware_vi.models.solution_user_required import SolutionUserRequired
from vmware_vi.models.system_error import SystemError
from vmware_vi.models.third_party_license_assignment_failed import ThirdPartyLicenseAssignmentFailed
from vmware_vi.models.unexpected_fault import UnexpectedFault
from vmware_vi.models.v_app_operation_in_progress import VAppOperationInProgress
from vmware_vi.models.vm_limit_license import VmLimitLicense
from vmware_vi.models.vram_limit_license import VramLimitLicense
# TODO: Rewrite to not use raise_errors
RuntimeFault.model_rebuild(raise_errors=False)

