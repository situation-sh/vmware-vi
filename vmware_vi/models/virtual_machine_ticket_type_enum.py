# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class VirtualMachineTicketTypeEnum(str, Enum):
    """
    The virtual machine ticket type.  Possible values: - `mks`:       Deprecated as of vSphere API 8.0. Use *webmks* instead.      Remote mouse-keyboard-screen ticket. - `device`:       Deprecated as of vSphere 8.0 API. Use *webRemoteDevice*   instead.      Remote device ticket. - `guestControl`:       Deprecated as of vSphere 6.6.3 API. Use   *GuestOperationsManager* instead.      Guest operation ticket. - `dnd`: Drag and drop ticket.      ***Since:*** vim dnd version - `webmks`: Mouse-keyboard-screen over WebSocket ticket.      MKS protocol is VNC (a.k.a. RFB) protocol with   VMware extensions; the protocol gracefully degrades   to standard VNC if extensions are not available.   wss://{Ticket.host}/ticket/{Ticket.ticket}      ***Since:*** vSphere API 6.0 - `guestIntegrity`: Guest Integrity over WebSocket ticket.      This ticket grants the client read-only access to guest integrity   messages and alerts.      ***Since:*** vSphere API 6.7 - `webRemoteDevice`: Remote device over WebSocket ticket.      ***Since:*** vSphere API 7.0  ***Since:*** vSphere API 4.1 
    """

    """
    allowed enum values
    """
    MKS = 'mks'
    DEVICE = 'device'
    GUESTCONTROL = 'guestControl'
    DND = 'dnd'
    WEBMKS = 'webmks'
    GUESTINTEGRITY = 'guestIntegrity'
    WEBREMOTEDEVICE = 'webRemoteDevice'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of VirtualMachineTicketTypeEnum from a JSON string"""
        return cls(json.loads(json_str))


