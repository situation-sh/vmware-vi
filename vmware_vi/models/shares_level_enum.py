# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class SharesLevelEnum(str, Enum):
    """
    Simplified shares notation.  These designations have different meanings for different resources.  Possible values: - `low`: For CPU: Shares = 500 \\* number of virtual CPUs     For Memory: Shares = 5 \\* virtual machine memory size in megabytes     For Disk: Shares = 500     For Network: Shares = 0.25 \\* *DVSFeatureCapability.networkResourcePoolHighShareValue* - `normal`: For CPU: Shares = 1000 \\* number of virtual CPUs     For Memory: Shares = 10 \\* virtual machine memory size in megabytes     For Disk: Shares = 1000     For Network: Shares = 0.5 \\* *DVSFeatureCapability.networkResourcePoolHighShareValue* - `high`: For CPU: Shares = 2000 \\* number of virtual CPUs     For Memory: Shares = 20 \\* virtual machine memory size in megabytes     For Disk: Shares = 2000     For Network: Shares = *DVSFeatureCapability.networkResourcePoolHighShareValue* - `custom`: If you specify <code>custom</code> for the *SharesInfo.level* property, when there is resource contention the Server uses the *SharesInfo.shares* value to determine resource allocation. 
    """

    """
    allowed enum values
    """
    LOW = 'low'
    NORMAL = 'normal'
    HIGH = 'high'
    CUSTOM = 'custom'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of SharesLevelEnum from a JSON string"""
        return cls(json.loads(json_str))


