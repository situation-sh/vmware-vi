# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class ClusterVmReadinessReadyConditionEnum(str, Enum):
    """
    Condition for VM's readiness  Possible values: - `none`: No ready condition specified.      In case of vSphere HA, higher restart priority VMs are still   placed before lower priority VMs. - `poweredOn`: VM is powered on. - `guestHbStatusGreen`: VM guest operating system is up and responding normally (VM tools   heartbeat status is green). - `appHbStatusGreen`: An application running inside the VM is responding normally.      To enable Application Monitoring, you must first obtain the   appropriate SDK (or be using an application that supports VMware   Application Monitoring) and use it to set up customized heartbeats   for the applications you want to monitor.   See *ClusterDasConfigInfo.vmMonitoring*. - `useClusterDefault`: VM will use the cluster default setting.      This option is only   meaningful for per-VM settings.  ***Since:*** vSphere API 6.5 
    """

    """
    allowed enum values
    """
    NONE = 'none'
    POWEREDON = 'poweredOn'
    GUESTHBSTATUSGREEN = 'guestHbStatusGreen'
    APPHBSTATUSGREEN = 'appHbStatusGreen'
    USECLUSTERDEFAULT = 'useClusterDefault'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ClusterVmReadinessReadyConditionEnum from a JSON string"""
        return cls(json.loads(json_str))


