# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from typing import Any, ClassVar, Dict, List, Optional
from pydantic import StrictBool, StrictInt, StrictStr
from pydantic import Field
from vmware_vi.models.data_object import DataObject
from vmware_vi.models.host_date_time_system_time_zone import HostDateTimeSystemTimeZone
from vmware_vi.models.host_ntp_config import HostNtpConfig
from vmware_vi.models.host_ptp_config import HostPtpConfig
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class HostDateTimeInfo(DataObject):
    """
    This data object represents the dateTime configuration of the host.  ***Since:*** VI API 2.5 
    """ # noqa: E501
    time_zone: HostDateTimeSystemTimeZone = Field(alias="timeZone")
    system_clock_protocol: Optional[StrictStr] = Field(default=None, description="The system clock synchronization protocol.  See *HostDateTimeInfoProtocol_enum* for possible values.  ***Since:*** vSphere API 7.0 ", alias="systemClockProtocol")
    ntp_config: Optional[HostNtpConfig] = Field(default=None, alias="ntpConfig")
    ptp_config: Optional[HostPtpConfig] = Field(default=None, alias="ptpConfig")
    enabled: Optional[StrictBool] = Field(default=None, description="Present state of the time services subsystem.  ***Since:*** vSphere API 7.0.3.0 ")
    disable_events: Optional[StrictBool] = Field(default=None, description="When not disabled Network Time service or Precision Time service will send events to Virtual Center when service fails or recovers.  ***Since:*** vSphere API 7.0.3.0 ", alias="disableEvents")
    disable_fallback: Optional[StrictBool] = Field(default=None, description="When not disabled, if PrecisionTimeSync is configured, then the NTP configuration can run as backup.  ***Since:*** vSphere API 7.0.3.0 ", alias="disableFallback")
    in_fallback_state: Optional[StrictBool] = Field(default=None, description="Tracks if NTP is providing time to ESXi due to PTP service failure.  This is set only if disableFallback is set to false.  ***Since:*** vSphere API 7.0.3.0 ", alias="inFallbackState")
    service_sync: Optional[StrictBool] = Field(default=None, description="Report true if time is synchronized with remote time source For PrecisionTimeSync this is obtained from PTP Port Status value.  For NetworkTimeProtocol this obtained from Leap Indicator value.  ***Since:*** vSphere API 7.0.3.0 ", alias="serviceSync")
    last_sync_time: Optional[datetime] = Field(default=None, description="Timestamp when time services were last in sync with remote clock.  If not set, time services have never established synchronization.  ***Since:*** vSphere API 7.0.3.0 ", alias="lastSyncTime")
    remote_ntp_server: Optional[StrictStr] = Field(default=None, description="Provides the NTP server that the host is synced with from the set of servers configured.  ***Since:*** vSphere API 7.0.3.0 ", alias="remoteNtpServer")
    ntp_run_time: Optional[StrictInt] = Field(default=None, description="Provides the total seconds ntpd process has been running for.  ***Since:*** vSphere API 7.0.3.0 ", alias="ntpRunTime")
    ptp_run_time: Optional[StrictInt] = Field(default=None, description="Provides the total seconds ptpd process has been running for.  ***Since:*** vSphere API 7.0.3.0 ", alias="ptpRunTime")
    ntp_duration: Optional[StrictStr] = Field(default=None, description="Provides a duration in simplified, human-readable form for the lifetime of the ntp service.  ***Since:*** vSphere API 7.0.3.0 ", alias="ntpDuration")
    ptp_duration: Optional[StrictStr] = Field(default=None, description="Provides a duration in simplified, human-readable form for the lifetime of the ptp service.  ***Since:*** vSphere API 7.0.3.0 ", alias="ptpDuration")
    __properties: ClassVar[List[str]] = ["_typeName"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of HostDateTimeInfo from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of HostDateTimeInfo from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "_typeName": obj.get("_typeName")
        })
        return _obj


