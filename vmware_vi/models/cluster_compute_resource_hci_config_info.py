# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import StrictStr
from pydantic import Field
from vmware_vi.models.cluster_compute_resource_dvs_setting import ClusterComputeResourceDVSSetting
from vmware_vi.models.cluster_compute_resource_host_configuration_profile import ClusterComputeResourceHostConfigurationProfile
from vmware_vi.models.data_object import DataObject
from vmware_vi.models.managed_object_reference import ManagedObjectReference
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class ClusterComputeResourceHCIConfigInfo(DataObject):
    """
    This data object captures a subset of initial configuration of the cluster, which was configured by calling the *ClusterComputeResource.ConfigureHCI_Task* method.  ***Since:*** vSphere API 6.7.1 
    """ # noqa: E501
    workflow_state: StrictStr = Field(description="Configuration pertinent to state of the HCI workflow.  Valid values are enumerated by the *HCIWorkflowState* type.  ***Since:*** vSphere API 6.7.1 ", alias="workflowState")
    dvs_setting: Optional[List[ClusterComputeResourceDVSSetting]] = Field(default=None, description="Contains DVS related information captured while configuring the cluster.  ***Since:*** vSphere API 6.7.1 ", alias="dvsSetting")
    configured_hosts: Optional[List[ManagedObjectReference]] = Field(default=None, description="Contains a list of hosts that are currently configured using *ClusterComputeResource.ConfigureHCI_Task* and *ClusterComputeResource.ExtendHCI_Task* method.  A failed host will not be part of this list.  ***Since:*** vSphere API 6.7.1  Refers instances of *HostSystem*. ", alias="configuredHosts")
    host_config_profile: Optional[ClusterComputeResourceHostConfigurationProfile] = Field(default=None, alias="hostConfigProfile")
    __properties: ClassVar[List[str]] = ["_typeName"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ClusterComputeResourceHCIConfigInfo from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of ClusterComputeResourceHCIConfigInfo from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "_typeName": obj.get("_typeName")
        })
        return _obj


