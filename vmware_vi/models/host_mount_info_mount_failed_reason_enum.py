# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class HostMountInfoMountFailedReasonEnum(str, Enum):
    """
    NFS mount request can be failed due to a number of reasons as defined in this enum *HostMountInfoMountFailedReason_enum*.  The reason for the mount failure is reported in *HostMountInfo.mountFailedReason*. This is applicable only for those datastores to which mount retry is configured.  Possible values: - `CONNECT_FAILURE`: Failed to get port or connect.      Or MOUNT/FSINFO RPC failed. - `MOUNT_NOT_SUPPORTED`: Server doesn't support MOUNT\\_PROGRAM/MOUNT\\_PROGRAM\\_VERSION. - `NFS_NOT_SUPPORTED`: Server doesn't support NFS\\_PROGRAM/NFS\\_PROGRAM\\_VERSION. - `MOUNT_DENIED`: No permission to mount the remote volume or it doesn't exist. - `MOUNT_NOT_DIR`: Remote path not a directory. - `VOLUME_LIMIT_EXCEEDED`: Maximum NFS volumes have been mounted. - `CONN_LIMIT_EXCEEDED`: Maximum connections for NFS has been reached. - `MOUNT_EXISTS`: Volume already mounted or a different mount exists with same label. - `OTHERS`: Any other reason which is not present in above list. 
    """

    """
    allowed enum values
    """
    CONNECT_FAILURE = 'CONNECT_FAILURE'
    MOUNT_NOT_SUPPORTED = 'MOUNT_NOT_SUPPORTED'
    NFS_NOT_SUPPORTED = 'NFS_NOT_SUPPORTED'
    MOUNT_DENIED = 'MOUNT_DENIED'
    MOUNT_NOT_DIR = 'MOUNT_NOT_DIR'
    VOLUME_LIMIT_EXCEEDED = 'VOLUME_LIMIT_EXCEEDED'
    CONN_LIMIT_EXCEEDED = 'CONN_LIMIT_EXCEEDED'
    MOUNT_EXISTS = 'MOUNT_EXISTS'
    OTHERS = 'OTHERS'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of HostMountInfoMountFailedReasonEnum from a JSON string"""
        return cls(json.loads(json_str))


