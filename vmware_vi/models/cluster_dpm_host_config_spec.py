# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional

from vmware_vi.models.array_update_spec import ArrayUpdateSpec
from vmware_vi.models.cluster_dpm_host_config_info import ClusterDpmHostConfigInfo
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class ClusterDpmHostConfigSpec(ArrayUpdateSpec):
    """
    The *ClusterDpmHostConfigSpec* data object provides information that the Server uses to update the DPM configuration for a single host (identified by the *ClusterDpmHostConfigInfo.key* property).  The host DPM configuration overrides the cluster default DPM setting (*ClusterConfigSpecEx*.*ClusterConfigSpecEx.dpmConfig*).  The vSphere API defines three update operations (*ArrayUpdateSpec*.*ArrayUpdateSpec.operation*). - add: Define DPM behavior for a host. If the cluster   configuration already includes a DPM behavior override   for the specified host, this operation   removes the existing override and adds the new one.   The new DPM override will use the cluster default value   if you do not specify the behavior property   (*ClusterDpmConfigInfo.defaultDpmBehavior*). - edit: Perform an incremental update to an existing   DPM configuration entry for a host.   The reconfigure method changes only the properties   that you set in the data object. The entry must exist   in the   *ClusterConfigSpecEx*.*ClusterConfigSpecEx.dpmHostConfigSpec* array. - remove: Remove the DPM override for the specified   host. To identify the host to delete, use the   *ArrayUpdateSpec.removeKey* property   to specify the *ClusterDpmHostConfigInfo.key*   in the host override.    Use the *ComputeResource.ReconfigureComputeResource_Task* method to update the DPM configuration. If you set the modify parameter to true, you can use any of the three operations (add, edit, or remove). If you set the modify parameter to false, you can use only the add operation.  ***Since:*** VI API 2.5 
    """ # noqa: E501
    info: Optional[ClusterDpmHostConfigInfo] = None
    __properties: ClassVar[List[str]] = ["_typeName"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ClusterDpmHostConfigSpec from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of ClusterDpmHostConfigSpec from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "_typeName": obj.get("_typeName")
        })
        return _obj


