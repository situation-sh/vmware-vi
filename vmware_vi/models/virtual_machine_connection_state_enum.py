# coding: utf-8

"""
    Virtual Infrastructure JSON API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 8.0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class VirtualMachineConnectionStateEnum(str, Enum):
    """
    The connectivity state of a virtual machine.  When the API is provided directly by a server product, such as ESX Server, then the disconnected state is not possible. However, when accessed through VirtualCenter, the state of a virtual machine is set to disconnected if the hosts that manage the virtual machine becomes unavailable.  Possible values: - `connected`: The server has access to the virtual machine. - `disconnected`: The server is currently disconnected from the virtual machine, since its   host is disconnected.      See general comment for this enumerated type for more   details. - `orphaned`: The virtual machine is no longer registered on the host it is associated   with.      For example, a virtual machine that is unregistered or deleted   directly on a host managed by VirtualCenter shows up in this state. - `inaccessible`: One or more of the virtual machine configuration files are inaccessible.      For   example, this can be due to transient disk failures. In this case, no   configuration can be returned for a virtual machine. - `invalid`: The virtual machine configuration format is invalid.      Thus, it is accessible   on disk, but corrupted in a way that does not allow the server to read the   content. In this case, no configuration can be returned for a virtual   machine. 
    """

    """
    allowed enum values
    """
    CONNECTED = 'connected'
    DISCONNECTED = 'disconnected'
    ORPHANED = 'orphaned'
    INACCESSIBLE = 'inaccessible'
    INVALID = 'invalid'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of VirtualMachineConnectionStateEnum from a JSON string"""
        return cls(json.loads(json_str))


